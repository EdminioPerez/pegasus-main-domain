/* AssentSoftware (C)2021 */
package com.greek.main.hibernate.model;
// Generated 14 dic. 2021 22:42:55 by Hibernate Tools 3.2.2.GA and Assent Architecture

import com.gvt.core.domain.types.Auditable;
import com.gvt.core.domain.types.Cleanable;
import com.gvt.core.domain.types.Fillable;
import com.gvt.core.domain.types.Identificable;
import com.gvt.core.domain.types.Seleccionable;
import com.gvt.core.domain.types.Versionable;
import java.time.LocalDateTime;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Version;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

/** UsuarioOrganizacion generated by hbm2java */
@Entity
@EntityListeners({AuditingEntityListener.class})
@Table(name = "usuario_organizacion", schema = "public")
public class UsuarioOrganizacion
        implements Versionable,
                Seleccionable,
                Identificable,
                Fillable,
                Cleanable,
                Auditable,
                java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;

    private long version;

    private Organizacion organizacionByIdSede;

    private Persona persona;

    private Usuario usuario;

    private Organizacion organizacionByIdSedeDefault;

    private Organizacion organizacionByIdOrganizacion;
    @CreatedBy private String usuarioCreacion;
    @CreatedDate private LocalDateTime fechaCreacion;
    @LastModifiedBy private String usuarioModificacion;
    @LastModifiedDate private LocalDateTime fechaModificacion;

    public UsuarioOrganizacion() {
        // default constructor
    }

    public UsuarioOrganizacion(
            Organizacion organizacionByIdSede,
            Usuario usuario,
            Organizacion organizacionByIdOrganizacion) {
        this.organizacionByIdSede = organizacionByIdSede;
        this.usuario = usuario;
        this.organizacionByIdOrganizacion = organizacionByIdOrganizacion;
    }

    public UsuarioOrganizacion(
            Organizacion organizacionByIdSede,
            Persona persona,
            Usuario usuario,
            Organizacion organizacionByIdSedeDefault,
            Organizacion organizacionByIdOrganizacion,
            String usuarioCreacion,
            LocalDateTime fechaCreacion,
            String usuarioModificacion,
            LocalDateTime fechaModificacion) {
        this.organizacionByIdSede = organizacionByIdSede;
        this.persona = persona;
        this.usuario = usuario;
        this.organizacionByIdSedeDefault = organizacionByIdSedeDefault;
        this.organizacionByIdOrganizacion = organizacionByIdOrganizacion;
        this.usuarioCreacion = usuarioCreacion;
        this.fechaCreacion = fechaCreacion;
        this.usuarioModificacion = usuarioModificacion;
        this.fechaModificacion = fechaModificacion;
    }

    @GenericGenerator(
            name = "usuario_organizacion_seq_gen",
            strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
            parameters = {
                @Parameter(name = "sequence_name", value = "usuario_organizacion_id_seq"),
                @Parameter(name = "initial_value", value = "1"),
                @Parameter(name = "increment_size", value = "1")
            })
    @GeneratedValue(generator = "usuario_organizacion_seq_gen")
    @Id
    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version", nullable = false)
    public long getVersion() {
        return this.version;
    }

    public void setVersion(long version) {
        this.version = version;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_sede", nullable = false)
    public Organizacion getOrganizacionByIdSede() {
        return this.organizacionByIdSede;
    }

    public void setOrganizacionByIdSede(Organizacion organizacionByIdSede) {
        this.organizacionByIdSede = organizacionByIdSede;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_persona")
    public Persona getPersona() {
        return this.persona;
    }

    public void setPersona(Persona persona) {
        this.persona = persona;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_usuario", nullable = false)
    public Usuario getUsuario() {
        return this.usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_sede_default")
    public Organizacion getOrganizacionByIdSedeDefault() {
        return this.organizacionByIdSedeDefault;
    }

    public void setOrganizacionByIdSedeDefault(Organizacion organizacionByIdSedeDefault) {
        this.organizacionByIdSedeDefault = organizacionByIdSedeDefault;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "id_organizacion", nullable = false)
    public Organizacion getOrganizacionByIdOrganizacion() {
        return this.organizacionByIdOrganizacion;
    }

    public void setOrganizacionByIdOrganizacion(Organizacion organizacionByIdOrganizacion) {
        this.organizacionByIdOrganizacion = organizacionByIdOrganizacion;
    }

    @Column(name = "usuario_creacion", length = 64)
    public String getUsuarioCreacion() {
        return this.usuarioCreacion;
    }

    public void setUsuarioCreacion(String usuarioCreacion) {
        this.usuarioCreacion = usuarioCreacion;
    }

    @Column(name = "fecha_creacion", length = 29)
    public LocalDateTime getFechaCreacion() {
        return this.fechaCreacion;
    }

    public void setFechaCreacion(LocalDateTime fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    @Column(name = "usuario_modificacion", length = 64)
    public String getUsuarioModificacion() {
        return this.usuarioModificacion;
    }

    public void setUsuarioModificacion(String usuarioModificacion) {
        this.usuarioModificacion = usuarioModificacion;
    }

    @Column(name = "fecha_modificacion", length = 29)
    public LocalDateTime getFechaModificacion() {
        return this.fechaModificacion;
    }

    public void setFechaModificacion(LocalDateTime fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }

    /**
     * toString
     *
     * @return String
     */
    @Override
    public String toString() {
        StringBuilder buffer = new StringBuilder();

        buffer.append(getClass().getName())
                .append("@")
                .append(Integer.toHexString(hashCode()))
                .append(" [");
        buffer.append("id").append("='").append(getId()).append("' ");
        buffer.append("version").append("='").append(getVersion()).append("' ");
        buffer.append("organizacionByIdSede")
                .append("='")
                .append(getOrganizacionByIdSede())
                .append("' ");
        buffer.append("persona").append("='").append(getPersona()).append("' ");
        buffer.append("usuario").append("='").append(getUsuario()).append("' ");
        buffer.append("organizacionByIdSedeDefault")
                .append("='")
                .append(getOrganizacionByIdSedeDefault())
                .append("' ");
        buffer.append("organizacionByIdOrganizacion")
                .append("='")
                .append(getOrganizacionByIdOrganizacion())
                .append("' ");
        buffer.append("usuarioCreacion").append("='").append(getUsuarioCreacion()).append("' ");
        buffer.append("fechaCreacion").append("='").append(getFechaCreacion()).append("' ");
        buffer.append("usuarioModificacion")
                .append("='")
                .append(getUsuarioModificacion())
                .append("' ");
        buffer.append("fechaModificacion").append("='").append(getFechaModificacion()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;

        if (other == null) return false;

        if (!(other instanceof UsuarioOrganizacion)) return false;

        UsuarioOrganizacion castOther = (UsuarioOrganizacion) other;

        return ((this.getId() == castOther.getId())
                        || (this.getId() != null
                                && castOther.getId() != null
                                && this.getId().equals(castOther.getId())))
                && (this.getVersion() == castOther.getVersion());
    }

    @Override
    public int hashCode() {
        int result = 17;

        result = 37 * result + (getId() == null ? 0 : this.getId().hashCode());
        result = 37 * result + (int) this.getVersion();

        return result;
    }

    // The following is extra code specified in src/main/config/templates
    // Adding extra-code
    private boolean comesFromExternalDataSource = false;
    private boolean selected;

    @javax.persistence.Transient
    public boolean isExternalDataSource() {
        return this.comesFromExternalDataSource;
    }

    public void setExternalDataSource(boolean value) {
        this.comesFromExternalDataSource = value;
    }

    @javax.persistence.Transient
    public boolean getSelected() {
        return selected;
    }

    public void setSelected(boolean selected) {
        this.selected = selected;
    }

    public void cleanPOJO() {
        // Clean entities objects with id
        if (this.organizacionByIdSede != null
                && (organizacionByIdSede.getId() == null
                        || this.organizacionByIdSede.getId().longValue() == 0)) {
            organizacionByIdSede = null;
        }
        if (this.persona != null
                && (persona.getId() == null || this.persona.getId().longValue() == 0)) {
            persona = null;
        }
        if (this.usuario != null
                && (usuario.getId() == null || this.usuario.getId().longValue() == 0)) {
            usuario = null;
        }
        if (this.organizacionByIdSedeDefault != null
                && (organizacionByIdSedeDefault.getId() == null
                        || this.organizacionByIdSedeDefault.getId().longValue() == 0)) {
            organizacionByIdSedeDefault = null;
        }
        if (this.organizacionByIdOrganizacion != null
                && (organizacionByIdOrganizacion.getId() == null
                        || this.organizacionByIdOrganizacion.getId().longValue() == 0)) {
            organizacionByIdOrganizacion = null;
        }
    }

    public void fillPOJO() {
        // Initialize all properties with new
        if (this.organizacionByIdSede == null) {
            organizacionByIdSede = new Organizacion();
        }
        if (this.persona == null) {
            persona = new Persona();
        }
        if (this.usuario == null) {
            usuario = new Usuario();
        }
        if (this.organizacionByIdSedeDefault == null) {
            organizacionByIdSedeDefault = new Organizacion();
        }
        if (this.organizacionByIdOrganizacion == null) {
            organizacionByIdOrganizacion = new Organizacion();
        }
    }

    public UsuarioOrganizacion createPOJO() {
        fillPOJO();

        return this;
    }

    //	@PrePersist
    //	public void onPrePersist() {
    //		this.fechaCreacion = new Date();
    //		this.usuarioCreacion = getSecurityContextPrincipal();
    //	}
    //
    //	@PreUpdate
    //	public void onPreUpdate() {
    //		this.fechaModificacion = new Date();
    //		this.usuarioModificacion = getSecurityContextPrincipal();
    //	}
    //
    //	@javax.persistence.Transient
    //	private String getSecurityContextPrincipal() {
    //		String principal;
    //		String UNKNOWN_USER = "unknownUser";
    //
    //		if (SecurityContextHolder.getContext().getAuthentication() == null) {
    //			principal = UNKNOWN_USER;
    //		} else {
    //			try {
    //				principal = ((User) SecurityContextHolder.getContext().getAuthentication().getPrincipal())
    //						.getUsername();
    //			} catch (ClassCastException e) {
    //				principal = UNKNOWN_USER;
    //			}
    //		}
    //
    //		return principal;
    //	}

    // end of extra code specified in the hbm.xml files

}
