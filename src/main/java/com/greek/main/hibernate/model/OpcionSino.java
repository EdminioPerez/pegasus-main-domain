/* AssentSoftware (C)2021 */
package com.greek.main.hibernate.model;
// Generated 7 dic. 2021 10:22:07 by Hibernate Tools 3.2.2.GA and Assent Architecture

import com.gvt.core.domain.types.Auditable;
import com.gvt.core.domain.types.Cleanable;
import com.gvt.core.domain.types.Fillable;
import com.gvt.core.domain.types.Identificable;
import com.gvt.core.domain.types.Seleccionable;
import com.gvt.core.domain.types.Versionable;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.persistence.Version;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;
import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

/** OpcionSino generated by hbm2java */
@Entity
@EntityListeners({AuditingEntityListener.class})
@Table(
        name = "opcion_sino",
        schema = "public",
        uniqueConstraints = @UniqueConstraint(columnNames = "codigo_opcion_sino"))
public class OpcionSino
        implements Versionable,
                Seleccionable,
                Identificable,
                Fillable,
                Cleanable,
                Auditable,
                java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;

    private long version;

    private String codigoOpcionSino;

    private String nombreOpcionSino;
    @CreatedBy private String usuarioCreacion;
    @CreatedDate private LocalDateTime fechaCreacion;
    @LastModifiedBy private String usuarioModificacion;
    @LastModifiedDate private LocalDateTime fechaModificacion;

    private Set<Organizacion> organizacionsForEsHabilitado = new HashSet<Organizacion>(0);

    private Set<Persona> personasForEsPublica = new HashSet<Persona>(0);

    private Set<Usuario> usuariosForEsCuentaExpirada = new HashSet<Usuario>(0);

    private Set<Usuario> usuariosForEsActiva = new HashSet<Usuario>(0);

    private Set<Organizacion> organizacionsForEsPersonaContactoRequired =
            new HashSet<Organizacion>(0);

    private Set<Persona> personasForEsActiva = new HashSet<Persona>(0);

    private Set<Usuario> usuariosForEsCuentaBloqueada = new HashSet<Usuario>(0);

    private Set<Usuario> usuariosForEsConfiguradoPerfil = new HashSet<Usuario>(0);

    private Set<Usuario> usuariosForEsCredencialesExpiradas = new HashSet<Usuario>(0);

    public OpcionSino() {
        // default constructor
    }

    public OpcionSino(String codigoOpcionSino, String nombreOpcionSino) {
        this.codigoOpcionSino = codigoOpcionSino;
        this.nombreOpcionSino = nombreOpcionSino;
    }

    public OpcionSino(
            String codigoOpcionSino,
            String nombreOpcionSino,
            String usuarioCreacion,
            LocalDateTime fechaCreacion,
            String usuarioModificacion,
            LocalDateTime fechaModificacion,
            Set<Organizacion> organizacionsForEsHabilitado,
            Set<Persona> personasForEsPublica,
            Set<Usuario> usuariosForEsCuentaExpirada,
            Set<Usuario> usuariosForEsActiva,
            Set<Organizacion> organizacionsForEsPersonaContactoRequired,
            Set<Persona> personasForEsActiva,
            Set<Usuario> usuariosForEsCuentaBloqueada,
            Set<Usuario> usuariosForEsConfiguradoPerfil,
            Set<Usuario> usuariosForEsCredencialesExpiradas) {
        this.codigoOpcionSino = codigoOpcionSino;
        this.nombreOpcionSino = nombreOpcionSino;
        this.usuarioCreacion = usuarioCreacion;
        this.fechaCreacion = fechaCreacion;
        this.usuarioModificacion = usuarioModificacion;
        this.fechaModificacion = fechaModificacion;
        this.organizacionsForEsHabilitado = organizacionsForEsHabilitado;
        this.personasForEsPublica = personasForEsPublica;
        this.usuariosForEsCuentaExpirada = usuariosForEsCuentaExpirada;
        this.usuariosForEsActiva = usuariosForEsActiva;
        this.organizacionsForEsPersonaContactoRequired = organizacionsForEsPersonaContactoRequired;
        this.personasForEsActiva = personasForEsActiva;
        this.usuariosForEsCuentaBloqueada = usuariosForEsCuentaBloqueada;
        this.usuariosForEsConfiguradoPerfil = usuariosForEsConfiguradoPerfil;
        this.usuariosForEsCredencialesExpiradas = usuariosForEsCredencialesExpiradas;
    }

    @GenericGenerator(
            name = "opcion_sino_seq_gen",
            strategy = "org.hibernate.id.enhanced.SequenceStyleGenerator",
            parameters = {
                @Parameter(name = "sequence_name", value = "opcion_sino_id_seq"),
                @Parameter(name = "initial_value", value = "1"),
                @Parameter(name = "increment_size", value = "1")
            })
    @GeneratedValue(generator = "opcion_sino_seq_gen")
    @Id
    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    @Version
    @Column(name = "version", nullable = false)
    public long getVersion() {
        return this.version;
    }

    public void setVersion(long version) {
        this.version = version;
    }

    @Column(name = "codigo_opcion_sino", unique = true, nullable = false, length = 16)
    public String getCodigoOpcionSino() {
        return this.codigoOpcionSino;
    }

    public void setCodigoOpcionSino(String codigoOpcionSino) {
        this.codigoOpcionSino = codigoOpcionSino;
    }

    @Column(name = "nombre_opcion_sino", nullable = false, length = 64)
    public String getNombreOpcionSino() {
        return this.nombreOpcionSino;
    }

    public void setNombreOpcionSino(String nombreOpcionSino) {
        this.nombreOpcionSino = nombreOpcionSino;
    }

    @Column(name = "usuario_creacion", length = 64)
    public String getUsuarioCreacion() {
        return this.usuarioCreacion;
    }

    public void setUsuarioCreacion(String usuarioCreacion) {
        this.usuarioCreacion = usuarioCreacion;
    }

    @Column(name = "fecha_creacion", length = 29)
    public LocalDateTime getFechaCreacion() {
        return this.fechaCreacion;
    }

    public void setFechaCreacion(LocalDateTime fechaCreacion) {
        this.fechaCreacion = fechaCreacion;
    }

    @Column(name = "usuario_modificacion", length = 64)
    public String getUsuarioModificacion() {
        return this.usuarioModificacion;
    }

    public void setUsuarioModificacion(String usuarioModificacion) {
        this.usuarioModificacion = usuarioModificacion;
    }

    @Column(name = "fecha_modificacion", length = 29)
    public LocalDateTime getFechaModificacion() {
        return this.fechaModificacion;
    }

    public void setFechaModificacion(LocalDateTime fechaModificacion) {
        this.fechaModificacion = fechaModificacion;
    }
    // @JsonIgnore
    @OneToMany(
            cascade = CascadeType.ALL,
            fetch = FetchType.LAZY,
            mappedBy = "opcionSinoByEsHabilitado")
    public Set<Organizacion> getOrganizacionsForEsHabilitado() {
        return this.organizacionsForEsHabilitado;
    }

    public void setOrganizacionsForEsHabilitado(Set<Organizacion> organizacionsForEsHabilitado) {
        this.organizacionsForEsHabilitado = organizacionsForEsHabilitado;
    }
    // @JsonIgnore
    @OneToMany(
            cascade = CascadeType.ALL,
            fetch = FetchType.LAZY,
            mappedBy = "opcionSinoByEsPublica")
    public Set<Persona> getPersonasForEsPublica() {
        return this.personasForEsPublica;
    }

    public void setPersonasForEsPublica(Set<Persona> personasForEsPublica) {
        this.personasForEsPublica = personasForEsPublica;
    }
    // @JsonIgnore
    @OneToMany(
            cascade = CascadeType.ALL,
            fetch = FetchType.LAZY,
            mappedBy = "opcionSinoByEsCuentaExpirada")
    public Set<Usuario> getUsuariosForEsCuentaExpirada() {
        return this.usuariosForEsCuentaExpirada;
    }

    public void setUsuariosForEsCuentaExpirada(Set<Usuario> usuariosForEsCuentaExpirada) {
        this.usuariosForEsCuentaExpirada = usuariosForEsCuentaExpirada;
    }
    // @JsonIgnore
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "opcionSinoByEsActiva")
    public Set<Usuario> getUsuariosForEsActiva() {
        return this.usuariosForEsActiva;
    }

    public void setUsuariosForEsActiva(Set<Usuario> usuariosForEsActiva) {
        this.usuariosForEsActiva = usuariosForEsActiva;
    }
    // @JsonIgnore
    @OneToMany(
            cascade = CascadeType.ALL,
            fetch = FetchType.LAZY,
            mappedBy = "opcionSinoByEsPersonaContactoRequired")
    public Set<Organizacion> getOrganizacionsForEsPersonaContactoRequired() {
        return this.organizacionsForEsPersonaContactoRequired;
    }

    public void setOrganizacionsForEsPersonaContactoRequired(
            Set<Organizacion> organizacionsForEsPersonaContactoRequired) {
        this.organizacionsForEsPersonaContactoRequired = organizacionsForEsPersonaContactoRequired;
    }
    // @JsonIgnore
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, mappedBy = "opcionSinoByEsActiva")
    public Set<Persona> getPersonasForEsActiva() {
        return this.personasForEsActiva;
    }

    public void setPersonasForEsActiva(Set<Persona> personasForEsActiva) {
        this.personasForEsActiva = personasForEsActiva;
    }
    // @JsonIgnore
    @OneToMany(
            cascade = CascadeType.ALL,
            fetch = FetchType.LAZY,
            mappedBy = "opcionSinoByEsCuentaBloqueada")
    public Set<Usuario> getUsuariosForEsCuentaBloqueada() {
        return this.usuariosForEsCuentaBloqueada;
    }

    public void setUsuariosForEsCuentaBloqueada(Set<Usuario> usuariosForEsCuentaBloqueada) {
        this.usuariosForEsCuentaBloqueada = usuariosForEsCuentaBloqueada;
    }
    // @JsonIgnore
    @OneToMany(
            cascade = CascadeType.ALL,
            fetch = FetchType.LAZY,
            mappedBy = "opcionSinoByEsConfiguradoPerfil")
    public Set<Usuario> getUsuariosForEsConfiguradoPerfil() {
        return this.usuariosForEsConfiguradoPerfil;
    }

    public void setUsuariosForEsConfiguradoPerfil(Set<Usuario> usuariosForEsConfiguradoPerfil) {
        this.usuariosForEsConfiguradoPerfil = usuariosForEsConfiguradoPerfil;
    }
    // @JsonIgnore
    @OneToMany(
            cascade = CascadeType.ALL,
            fetch = FetchType.LAZY,
            mappedBy = "opcionSinoByEsCredencialesExpiradas")
    public Set<Usuario> getUsuariosForEsCredencialesExpiradas() {
        return this.usuariosForEsCredencialesExpiradas;
    }

    public void setUsuariosForEsCredencialesExpiradas(
            Set<Usuario> usuariosForEsCredencialesExpiradas) {
        this.usuariosForEsCredencialesExpiradas = usuariosForEsCredencialesExpiradas;
    }

    /**
     * toString
     *
     * @return String
     */
    @Override
    public String toString() {
        StringBuilder buffer = new StringBuilder();

        buffer.append(getClass().getName())
                .append("@")
                .append(Integer.toHexString(hashCode()))
                .append(" [");
        buffer.append("id").append("='").append(getId()).append("' ");
        buffer.append("version").append("='").append(getVersion()).append("' ");
        buffer.append("codigoOpcionSino").append("='").append(getCodigoOpcionSino()).append("' ");
        buffer.append("nombreOpcionSino").append("='").append(getNombreOpcionSino()).append("' ");
        buffer.append("usuarioCreacion").append("='").append(getUsuarioCreacion()).append("' ");
        buffer.append("fechaCreacion").append("='").append(getFechaCreacion()).append("' ");
        buffer.append("usuarioModificacion")
                .append("='")
                .append(getUsuarioModificacion())
                .append("' ");
        buffer.append("fechaModificacion").append("='").append(getFechaModificacion()).append("' ");
        buffer.append("]");

        return buffer.toString();
    }

    @Override
    public boolean equals(Object other) {
        if (this == other) return true;

        if (other == null) return false;

        if (!(other instanceof OpcionSino)) return false;

        OpcionSino castOther = (OpcionSino) other;

        return ((this.getId() == castOther.getId())
                        || (this.getId() != null
                                && castOther.getId() != null
                                && this.getId().equals(castOther.getId())))
                && (this.getVersion() == castOther.getVersion());
    }

    @Override
    public int hashCode() {
        int result = 17;

        result = 37 * result + (getId() == null ? 0 : this.getId().hashCode());
        result = 37 * result + (int) this.getVersion();

        return result;
    }

    // The following is extra code specified in src/main/config/templates
    // Adding extra-code
    private boolean comesFromExternalDataSource = false;
    private boolean selected;

    @javax.persistence.Transient
    public boolean isExternalDataSource() {
        return this.comesFromExternalDataSource;
    }

    public void setExternalDataSource(boolean value) {
        this.comesFromExternalDataSource = value;
    }

    @javax.persistence.Transient
    public boolean getSelected() {
        return selected;
    }

    public void setSelected(boolean selected) {
        this.selected = selected;
    }

    public void cleanPOJO() {
        // Clean entities objects with id
    }

    public void fillPOJO() {
        // Initialize all properties with new
    }

    public OpcionSino createPOJO() {
        fillPOJO();

        return this;
    }

    //	@PrePersist
    //	public void onPrePersist() {
    //		this.fechaCreacion = new Date();
    //		this.usuarioCreacion = getSecurityContextPrincipal();
    //	}
    //
    //	@PreUpdate
    //	public void onPreUpdate() {
    //		this.fechaModificacion = new Date();
    //		this.usuarioModificacion = getSecurityContextPrincipal();
    //	}
    //
    //	@javax.persistence.Transient
    //	private String getSecurityContextPrincipal() {
    //		String principal;
    //		String UNKNOWN_USER = "unknownUser";
    //
    //		if (SecurityContextHolder.getContext().getAuthentication() == null) {
    //			principal = UNKNOWN_USER;
    //		} else {
    //			try {
    //				principal = ((User) SecurityContextHolder.getContext().getAuthentication().getPrincipal())
    //						.getUsername();
    //			} catch (ClassCastException e) {
    //				principal = UNKNOWN_USER;
    //			}
    //		}
    //
    //		return principal;
    //	}

    // end of extra code specified in the hbm.xml files

}
